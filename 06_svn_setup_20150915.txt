1. 설치
[root@centos ~]$ yum -y install subversion

2. Repository 설정
[root@centos ~]$ adduser svn
[root@centos ~]$ passwd svn
[root@centos ~]$ mkdir /home/svn/repos
[root@centos ~]$ svnadmin create --fs-type fsfs /home/svn/repos
[root@centos ~]$ chmod -R g+w  /home/svn/repos
[root@centos ~]$ chown -R svn:svn /home/svn/repos

3. svnserve.conf 설정
[root@centos ~]$ vi /home/svn/repos/conf/svnserve.conf
[general]
anon-access = none
auth-access = write
password-db = passwd
authz-db=authz
realm="welcome SVN"

4. passwd 설정
[user]
vincentgoo=12345
dev01=12345
dev02=12345

5. authz 설정
[root@centos ~]$ vi /home/svn/repos/conf/authz
[user]
devgroup=root,vincentgoo,devuser01,devuser02
[repos:/]
@devgroup=rw
*=r

5. 서버 기동
[root@centos ~]$ svnserve -d -r /home/svn/repos

6. SVN 서버 확인
[root@centos ~]$ svn checkout svn://127.0.0.1/repos

7. 기본 디렉토리 만들기
 - 기본으로 사용될 폴더를 생성합니다. 코멘트가 있으면 작성하고 저장후 닫습니다.
  없으면 ":q!" 눌러서 종료하고 계속(C) 눌러줍니다. 영문으로 'y or n or yes or no' 입력시 안되면 '예' 라고 입력하자

 svn 사용자로 인증 받자.
[root@centos ~]$ export SVN_EDITOR=/usr/bin/vim
[root@centos ~]$ svn mkdir svn://127.0.0.1/repos/trunk
[root@centos ~]$ svn mkdir svn://127.0.0.1/repos/branches
[root@centos ~]$  svn mkdir svn://127.0.0.1/repos/tags

8. SVN 구성 확인
[root@centos ~]$ svn list svn://127.0.0.1/repos
branches/
tags/
trunk/

9. 자동실행
vim /etc/rc.d/rc.local
svnserve -d -r /home/svn --listen-host=0.0.0.0 //rc.local 파일에 이 명령어 추가

10. 정지 
# ps -ef | grep svnserve
29373 ?        00:00:00 svnserve
그다음 해당 process 를 죽인다.
#kill -9 29373
#killall svnserve
[출처] (리눅스에서) svn 서비스 시작 및 정지|작성자 풀빵

출처 : http://blueray21.tistory.com/43


11. CentOs7 인 경우
2015년 12월 26일 추가된 내용
/var/www/ 폴더에 svn 폴더를 생성해야 정상적으로 설정 됨. 
httpd 설정 시 svn.conf에 SVNParentPath를 설정해야 함. 


정리전
(01) ntsysv
(02) chkconfig
chkconfig는 시스템 서비스에 대한 런레벨(runlevel)을 질의하고 업데이트 하는 명령어로서 chkconfig ?list를 실행하면 각각의 런레벨에서 해당 서비스가 어떻게 설정되어 있는지 알려준다.
통상적으로 서버용으로 많이 사용하는 런레벨 3번에서 작동하는 서비스에 대한 정보를 보려면 다음과 같이 하면 된다.
[root@localhost /]# chkconfig --list | grep 3:활성

또는 원격 접속시 영어로 표기된다면 [root@localhost /]# chkconfig --list | grep 3:on 하면 된다.
특정 서비스를 런레벨에서 off로 설정하려면 다음과 같이 하면 된다.
[root@localhost /]# chkconfig --level 3 iptables off
런레벨 3에서 off 했는지 확인해 보자.
[root@localhost /]# chkconfig --list | grep iptables
iptables 0:해제 1:해제 2:활성 3:해제 4:활성 5:활성 6:해제
원복시킬려면 [root@localhost /]# chkconfig --level 3 iptables on 하면 된다.
더 자세한 것은 [root@localhost /]# man chkconfig 해보거나 콘솔상에서 chkconfig 하면 옵션을 알 수 있다.
[root@localhost /]# chkconfig
chkconfig 버전 1.3.30.1 - Copyright (C) 1997-2000 Red Hat, Inc.

이 프로그램은 GNU Public License 내에서 자유롭게 재배포될 수 있습니다.

사용법: chkconfig --list [이름]

chkconfig --add <이름>

chkconfig --del <이름>

chkconfig [--level <레벨>] <이름> <on|off|reset|resetpriorities>

 

 

(03) service

[root@localhost /]# service --status-all

ntsysv에서 보였던 서비스들이 모두 나타난다.

위 파일들을 살펴보면 앞단위가 S와 K로 시작되는 것을 알 수 있다.

S는 start로서 부팅시 작동할 서비스를 말하고, K는 kill의 의미로 작동하지 않을 서비스를 말한다.

그리고 S나 K뒤에 있는 숫자는 실행될 번호로서 낮은 번호가 먼저 실행된다.

 




[TIP]

대표적으로 kill 하여야 하는 서비스에 대해 알아보자.

S05apmd : laptop에서 전원관리를 위해 필요하므로 서버에서는 필요없다.

S10cups : Common UNIX Printing System 으로 서버에는 필요없다. (단, samba 서버 구현시에는 필요하다.)

S10xntpd : Network time protocol이다. 사용할 경우가 없으므로 필요없다.

S11portmap : NIS나 NFS 서비스 이용시 R로 시작되는 서비스에 대한 port를 mapping 시켜주는 서비스이므로

보안상 문제가 많다. 필요 없다.

S15sound : 서버에서 sound를 서비스 하지 않으므로 필요없다.

S15netfs : nfs client가 nfs server를 마운트 할 때 필요하므로 역시 필요없다.

S20rstatd, S20rusersd, S20rwhod, S20rwalld : R로 시작하는 서비스는 인증과정이 취약하고 Remote에서 실행하는 것이므로 반드시 서비스를 하지 않도록 하여야 한다.

S20bootparamd : 하드나 플로피 등 부팅 수단에 없을 때 이용하는 것으로 반드시 서비스하지 않아야 한다.

S25squid : squid 프록시 서버를 가동하는 설정이므로 사용하지 않는다면 필요없다.

S34yppasswdd : NIS server에서 필요하므로 필요없다.

S35ypserv : 역시 NIS에서 필요한 설정이므로 필요없다.

S35dhcpd : dhcp(IP 동적 할당 서비스)에서 필요하므로 일반적으로 필요없다.

S40atd : cron과 같은 서비스인데, cron 서비스를 이용하므로 이 서비스는 필요 없다.

S45pcmcia : 노트북에서 필요하므로 삭제한다.

S50snmpd : 원격의 이용자가 트래픽이나 시스템에 대한 정보를 필요로 할 때 필요한데, 사용한다면 snmp community string을 엄격하게 설정하고 사용하지 않는다면 삭제한다.

S55named : DNS 서비스를 제공한다면 이용하지만 그렇지 않으면 삭제한다.

S55routed : 라우터가 아닌 이상 일반 서버에서는 삭제한다.

S60lpd : 프린트 서버가 아닌 이상 반드시 삭제한다.

S60mars-new : Netware 에서 쓰는 file 이나 printer server 이므로 삭제한다.

S60nfs : NFS server 에서 필요하므로 nfs 서비스하지 않는다면 삭제한다.

S72amd : AutoMount daemon으로 원격지의 File system을 mount 할 때 필요하다

Amd는 전통적으로 보안 취약성이 있으므로 삭제한다.

S80sendmail : sendmail 데몬이다. 메일 서비스를 제공한다면 삭제한다.

S85httpd : Apache 웹서버이다. 컴파일 하여 실치하였을 경우에는 이 부분을 삭제하고

해당 부분을 /etc/rc.d/rc.local에 추가한다.

S87ypbind : NIS를 쓸 때 필요하다. 사용하지 않는다면 반드시 삭제한다.

S90xfs : X font server로, 서버에서는 X-Windows 서비스를 하지 않으므로 삭제한다.

S95innd : News server로 news 서비스를 하지 않으므로 삭제한다.

S99linuxconf : 원격지에서 브라우저를 통해 리눅스 시스템의 설정을 변경할 수 있는 것으로

보안상 취약성을 가지고 있으므로 반드시 삭제하여야 한다.

[출처] 리눅스 불필요한 서비스 제거|작성자 소류하



이야~ 리눅스 서버가지고 삽질하는 재미가 쏠쏠합디다. 개발상 요긴하게 사용할 수 있는것들이 무궁무진하군요. 진작에 임대할걸 그랬어요. 이번에는 CentOS에 Subversion을 설치하는 것에 도전했습니다. 다행히도 한글로 작성된 관련문서들이 많아 아주 쉽게 진행할 수 있었습니다. 이제야 개인 소스 리파지토리를 가지게 되었네요. 아래에 SVN을 설치하고 설정하는 과정을 기록했습니다.

Subversion 설치하기 - {reponame}은 리파지토리 이름입니다.
# yum install subversion

Repository 생성하기 - svn 루트 폴더를 생성하고 폴더권한을 부여합니다.
# mkdir /home/svn
# cd /home/svn
# svnadmin create --fs-type fsfs {reponame}
# chmod ?R g+w {reponame}

SVN 서버 설정하기 - vi를 이용하여 환경설정 및 사용자를 추가한 후 수정하고 저장(:wq)합니다.
# cd /home/svn/{reponame}/conf
# vi svnserve.conf
[general]
anon-access = none
auth-access = write
password-db = passwd
realm = {Firejune Repository}

# vi passwd
[users]
firejune = {password}

# vi authz
[{reponame}:/]
firejune = rw

SVN 서버 시작하기 - SVN서버의 기본 포트는 3690입니다. ?listen-port {port_num} 옵션으로 변경할 수 있습니다.
# svnserve -d -r /home/svn

SVN 체크아웃하기 - 지금까지 설정한대로 작동하는지 확인합니다. {firejune.io}에는 서버의 도메인 또는 아이피를 입력합니다.
# svn co svn://{firejune.io}/{reponame}

이때 아래와 같은 현상 발생할 수 있습니다.
인증 영역(realm): &lt;svn://firejune.io:3690&gt; Firejune Repository
'root'의 암호:
인증 영역(realm): &lt;svn://firejune.io:3690&gt; Firejune Repository
사용자명:firejune
'firejune'의 암호:

-----------------------------------------------------------------------
ATTENTION!  Your password for authentication realm:

   &lt;svn://firejune.io:3690&gt; Firejune Repository

can only be stored to disk unencrypted!  You are advised to configure
your system so that Subversion can store passwords encrypted, if
possible.  See the documentation for details.

You can avoid future appearances of this warning by setting the value
of the 'store-plaintext-passwords' option to either 'yes' or 'no' in
'/var/www/.subversion/servers'.
-----------------------------------------------------------------------
Store password unencrypted (yes/no)? yes
Please type 'yes' or 'no': yes
Please type 'yes' or 'no': yes
Please type 'yes' or 'no': y
Please type 'yes' or 'no': yeah
Please type 'yes' or 'no': no
Please type 'yes' or 'no': 'yes'
Please type 'yes' or 'no': YES
Please type 'yes' or 'no':
Please type 'yes' or 'no': wtf
Please type 'yes' or 'no': shit
Please type 'yes' or 'no': 
Please type 'yes' or 'no': 18

여기서 한참 삽질하다가 포기할 뻔 했습니다. locale이 한글로 되어있던게 원인이더군요. "예" 또는 "아니오"로 입력해야 됩니다.

기본 폴더 생성하기 - 기본으로 사용될 폴더를 생성합니다. 코멘트가 있으면 작성하고 저장후 닫습니다. 없으면 ":q!" 눌러서 종료하고 계속(C) 눌러줍니다.
# export SVN_EDITOR=/usr/bin/vim
# svn mkdir svn://firejune.io/{reponame}/trunk
# svn mkdir svn://firejune.io/{reponame}/branches
# svn mkdir svn://firejune.io/{reponame}/tags

기본 폴더 생성확인 - 폴더가 생성되었는지 확인합니다.
# svn list svn://firejune.io/{reponame}
branches/
tags/
trunk/

SVN 서버 살아있는지 확인 - SVN 서버가 사용중인 포트가 살아있는지 봅니다.
# netstat -ant | grep 3690

SVN 서버 죽이기 - ps 명령으로 svnserve의 프로세서 ID를 알아낸 후 kill 명령으로 죽여버립니다.
# ps -ef | grep svnserve
# kill -9 {PID}